<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        srv8fwAAAABJRU5ErkJggg==
</value>
  </data>
</root>